//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/hecto/RiderProjects/BRAQ/BRAQ_grammar\BRAQLexer.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class BRAQLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		EQUALS=1, PLUS=2, MINUS=3, STAR=4, SLASH=5, MODULUS=6, AT_OPERATOR=7, 
		GR=8, GE=9, LS=10, LE=11, EQ=12, NE=13, AND=14, OR=15, XOR=16, NOT=17, 
		NUMBER=18, LBRACKET=19, RBRACKET=20, SEMICOLON=21, NEWLINE=22, SPACE=23, 
		VAR=24, PRINT=25, READ=26, STRING=27, ID=28;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"EQUALS", "PLUS", "MINUS", "STAR", "SLASH", "MODULUS", "AT_OPERATOR", 
		"GR", "GE", "LS", "LE", "EQ", "NE", "AND", "OR", "XOR", "NOT", "NUMBER", 
		"LBRACKET", "RBRACKET", "SEMICOLON", "NEWLINE", "SPACE", "VAR", "PRINT", 
		"READ", "STRING", "ID"
	};


	public BRAQLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public BRAQLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'='", "'+'", "'-'", "'*'", "'/'", "'%'", "'@'", "'>'", "'>='", 
		"'<'", "'<='", "'?='", "'!='", "'and'", "'or'", "'xor'", "'not'", null, 
		"'('", "')'", "';'", null, null, "'var'", "'print'", "'read'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "EQUALS", "PLUS", "MINUS", "STAR", "SLASH", "MODULUS", "AT_OPERATOR", 
		"GR", "GE", "LS", "LE", "EQ", "NE", "AND", "OR", "XOR", "NOT", "NUMBER", 
		"LBRACKET", "RBRACKET", "SEMICOLON", "NEWLINE", "SPACE", "VAR", "PRINT", 
		"READ", "STRING", "ID"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "BRAQLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static BRAQLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x1E', '\xA0', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', 
		'\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', 
		'\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x6', 
		'\x13', 'j', '\n', '\x13', '\r', '\x13', '\xE', '\x13', 'k', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', 
		'\x3', '\x17', '\x6', '\x17', 'u', '\n', '\x17', '\r', '\x17', '\xE', 
		'\x17', 'v', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x6', '\x18', 
		'|', '\n', '\x18', '\r', '\x18', '\xE', '\x18', '}', '\x3', '\x18', '\x3', 
		'\x18', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', 
		'\x1A', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1A', '\x3', 
		'\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x3', 
		'\x1B', '\x3', '\x1C', '\x3', '\x1C', '\a', '\x1C', '\x93', '\n', '\x1C', 
		'\f', '\x1C', '\xE', '\x1C', '\x96', '\v', '\x1C', '\x3', '\x1C', '\x3', 
		'\x1C', '\x3', '\x1D', '\x3', '\x1D', '\a', '\x1D', '\x9C', '\n', '\x1D', 
		'\f', '\x1D', '\xE', '\x1D', '\x9F', '\v', '\x1D', '\x3', '\x94', '\x2', 
		'\x1E', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', 
		'\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', 
		'\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', 
		'\x12', '#', '\x13', '%', '\x14', '\'', '\x15', ')', '\x16', '+', '\x17', 
		'-', '\x18', '/', '\x19', '\x31', '\x1A', '\x33', '\x1B', '\x35', '\x1C', 
		'\x37', '\x1D', '\x39', '\x1E', '\x3', '\x2', '\a', '\x3', '\x2', '\x32', 
		';', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x4', '\x2', '\v', '\v', 
		'\"', '\"', '\x5', '\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x6', 
		'\x2', '\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x2', 
		'\xA4', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', 
		')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\x3', ';', '\x3', '\x2', '\x2', '\x2', '\x5', '=', '\x3', '\x2', 
		'\x2', '\x2', '\a', '?', '\x3', '\x2', '\x2', '\x2', '\t', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\v', '\x43', '\x3', '\x2', '\x2', '\x2', '\r', '\x45', 
		'\x3', '\x2', '\x2', '\x2', '\xF', 'G', '\x3', '\x2', '\x2', '\x2', '\x11', 
		'I', '\x3', '\x2', '\x2', '\x2', '\x13', 'K', '\x3', '\x2', '\x2', '\x2', 
		'\x15', 'N', '\x3', '\x2', '\x2', '\x2', '\x17', 'P', '\x3', '\x2', '\x2', 
		'\x2', '\x19', 'S', '\x3', '\x2', '\x2', '\x2', '\x1B', 'V', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', 'Y', '\x3', '\x2', '\x2', '\x2', '\x1F', ']', '\x3', 
		'\x2', '\x2', '\x2', '!', '`', '\x3', '\x2', '\x2', '\x2', '#', '\x64', 
		'\x3', '\x2', '\x2', '\x2', '%', 'i', '\x3', '\x2', '\x2', '\x2', '\'', 
		'm', '\x3', '\x2', '\x2', '\x2', ')', 'o', '\x3', '\x2', '\x2', '\x2', 
		'+', 'q', '\x3', '\x2', '\x2', '\x2', '-', 't', '\x3', '\x2', '\x2', '\x2', 
		'/', '{', '\x3', '\x2', '\x2', '\x2', '\x31', '\x81', '\x3', '\x2', '\x2', 
		'\x2', '\x33', '\x85', '\x3', '\x2', '\x2', '\x2', '\x35', '\x8B', '\x3', 
		'\x2', '\x2', '\x2', '\x37', '\x90', '\x3', '\x2', '\x2', '\x2', '\x39', 
		'\x99', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', '?', '\x2', '\x2', 
		'<', '\x4', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', '-', '\x2', '\x2', 
		'>', '\x6', '\x3', '\x2', '\x2', '\x2', '?', '@', '\a', '/', '\x2', '\x2', 
		'@', '\b', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\a', ',', '\x2', 
		'\x2', '\x42', '\n', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\a', 
		'\x31', '\x2', '\x2', '\x44', '\f', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x46', '\a', '\'', '\x2', '\x2', '\x46', '\xE', '\x3', '\x2', '\x2', 
		'\x2', 'G', 'H', '\a', '\x42', '\x2', '\x2', 'H', '\x10', '\x3', '\x2', 
		'\x2', '\x2', 'I', 'J', '\a', '@', '\x2', '\x2', 'J', '\x12', '\x3', '\x2', 
		'\x2', '\x2', 'K', 'L', '\a', '@', '\x2', '\x2', 'L', 'M', '\a', '?', 
		'\x2', '\x2', 'M', '\x14', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', 
		'>', '\x2', '\x2', 'O', '\x16', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', 
		'\a', '>', '\x2', '\x2', 'Q', 'R', '\a', '?', '\x2', '\x2', 'R', '\x18', 
		'\x3', '\x2', '\x2', '\x2', 'S', 'T', '\a', '\x41', '\x2', '\x2', 'T', 
		'U', '\a', '?', '\x2', '\x2', 'U', '\x1A', '\x3', '\x2', '\x2', '\x2', 
		'V', 'W', '\a', '#', '\x2', '\x2', 'W', 'X', '\a', '?', '\x2', '\x2', 
		'X', '\x1C', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\a', '\x63', '\x2', 
		'\x2', 'Z', '[', '\a', 'p', '\x2', '\x2', '[', '\\', '\a', '\x66', '\x2', 
		'\x2', '\\', '\x1E', '\x3', '\x2', '\x2', '\x2', ']', '^', '\a', 'q', 
		'\x2', '\x2', '^', '_', '\a', 't', '\x2', '\x2', '_', ' ', '\x3', '\x2', 
		'\x2', '\x2', '`', '\x61', '\a', 'z', '\x2', '\x2', '\x61', '\x62', '\a', 
		'q', '\x2', '\x2', '\x62', '\x63', '\a', 't', '\x2', '\x2', '\x63', '\"', 
		'\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\a', 'p', '\x2', '\x2', '\x65', 
		'\x66', '\a', 'q', '\x2', '\x2', '\x66', 'g', '\a', 'v', '\x2', '\x2', 
		'g', '$', '\x3', '\x2', '\x2', '\x2', 'h', 'j', '\t', '\x2', '\x2', '\x2', 
		'i', 'h', '\x3', '\x2', '\x2', '\x2', 'j', 'k', '\x3', '\x2', '\x2', '\x2', 
		'k', 'i', '\x3', '\x2', '\x2', '\x2', 'k', 'l', '\x3', '\x2', '\x2', '\x2', 
		'l', '&', '\x3', '\x2', '\x2', '\x2', 'm', 'n', '\a', '*', '\x2', '\x2', 
		'n', '(', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\a', '+', '\x2', '\x2', 
		'p', '*', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\a', '=', '\x2', '\x2', 
		'r', ',', '\x3', '\x2', '\x2', '\x2', 's', 'u', '\t', '\x3', '\x2', '\x2', 
		't', 's', '\x3', '\x2', '\x2', '\x2', 'u', 'v', '\x3', '\x2', '\x2', '\x2', 
		'v', 't', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 
		'w', 'x', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\b', '\x17', '\x2', '\x2', 
		'y', '.', '\x3', '\x2', '\x2', '\x2', 'z', '|', '\t', '\x4', '\x2', '\x2', 
		'{', 'z', '\x3', '\x2', '\x2', '\x2', '|', '}', '\x3', '\x2', '\x2', '\x2', 
		'}', '{', '\x3', '\x2', '\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', '\x2', 
		'~', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\b', '\x18', 
		'\x2', '\x2', '\x80', '\x30', '\x3', '\x2', '\x2', '\x2', '\x81', '\x82', 
		'\a', 'x', '\x2', '\x2', '\x82', '\x83', '\a', '\x63', '\x2', '\x2', '\x83', 
		'\x84', '\a', 't', '\x2', '\x2', '\x84', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\x85', '\x86', '\a', 'r', '\x2', '\x2', '\x86', '\x87', '\a', 
		't', '\x2', '\x2', '\x87', '\x88', '\a', 'k', '\x2', '\x2', '\x88', '\x89', 
		'\a', 'p', '\x2', '\x2', '\x89', '\x8A', '\a', 'v', '\x2', '\x2', '\x8A', 
		'\x34', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x8C', '\a', 't', '\x2', 
		'\x2', '\x8C', '\x8D', '\a', 'g', '\x2', '\x2', '\x8D', '\x8E', '\a', 
		'\x63', '\x2', '\x2', '\x8E', '\x8F', '\a', '\x66', '\x2', '\x2', '\x8F', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\x90', '\x94', '\a', '$', '\x2', 
		'\x2', '\x91', '\x93', '\v', '\x2', '\x2', '\x2', '\x92', '\x91', '\x3', 
		'\x2', '\x2', '\x2', '\x93', '\x96', '\x3', '\x2', '\x2', '\x2', '\x94', 
		'\x95', '\x3', '\x2', '\x2', '\x2', '\x94', '\x92', '\x3', '\x2', '\x2', 
		'\x2', '\x95', '\x97', '\x3', '\x2', '\x2', '\x2', '\x96', '\x94', '\x3', 
		'\x2', '\x2', '\x2', '\x97', '\x98', '\a', '$', '\x2', '\x2', '\x98', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\x99', '\x9D', '\t', '\x5', '\x2', 
		'\x2', '\x9A', '\x9C', '\t', '\x6', '\x2', '\x2', '\x9B', '\x9A', '\x3', 
		'\x2', '\x2', '\x2', '\x9C', '\x9F', '\x3', '\x2', '\x2', '\x2', '\x9D', 
		'\x9B', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', '\x3', '\x2', '\x2', 
		'\x2', '\x9E', ':', '\x3', '\x2', '\x2', '\x2', '\x9F', '\x9D', '\x3', 
		'\x2', '\x2', '\x2', '\b', '\x2', 'k', 'v', '}', '\x94', '\x9D', '\x3', 
		'\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
